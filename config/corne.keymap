/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <29 19 9 8 5 6 8 15 16 17 18 25 26 27 28 33 34 35 7 30 31 32>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33 35 34>;
            require-prior-idle-ms = <150>;
        };
    };

    macros {
        tmux: tmux {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_CONTROL &kp A>;
            label = "TMUX";
        };

        tog_emit_lower: tog_emit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog 1 &kp LS(F1)>;
            label = "TOG_EMIT";
        };

        tog_emit_raise: tog_emit_raise {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog 2 &kp LS(F2)>;
            label = "TOG_EMIT_RAISE";
        };

        tog_emit_3: tog_emit_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog 3 &kp LS(F3)>;
            label = "TOG_EMIT_3";
        };

        to_default: to_default {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp LS(F4)>;
            label = "TO_DEFAULT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp Q                &kp W            &kp E            &kp R              &kp T      &kp Y      &kp U               &kp I             &kp O             &kp P
  &hml LEFT_CONTROL A  &hml LEFT_GUI S  &hml LEFT_ALT D  &hml LEFT_SHIFT F  &kp G      &kp H      &hmr RIGHT_SHIFT J  &hmr RIGHT_ALT K  &hmr RIGHT_GUI L  &hmr RIGHT_CONTROL BACKSPACE
  &kp Z                &kp X            &kp C            &kp V              &kp B      &kp N      &kp M               &kp COMMA         &kp PERIOD        &kp COLON
                                        &kp TAB          &kp SPACE          &kp ESC    &kp RC(A)  &tog 1              &kp RETURN
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp EXCLAMATION          &kp AT_SIGN               &kp HASH                        &kp DOLLAR                    &kp PERCENT         &kp CARET          &kp AMPERSAND                   &kp ASTERISK                      &kp MINUS                   &kp EQUAL
  &hml LEFT_CONTROL TILDE  &hml LEFT_GUI LEFT_BRACE  &hml LEFT_ALT LEFT_PARENTHESIS  &hml LEFT_SHIFT LEFT_BRACKET  &kp LESS_THAN       &kp GREATER_THAN   &hmr RIGHT_SHIFT RIGHT_BRACKET  &hmr RIGHT_ALT RIGHT_PARENTHESIS  &hmr RIGHT_GUI RIGHT_BRACE  &hmr RIGHT_CONTROL BACKSPACE
  &kp GRAVE                &kp UNDERSCORE            &kp SEMI                        &kp COLON                     &kp SINGLE_QUOTE    &kp DOUBLE_QUOTES  &kp BACKSLASH                   &kp PIPE                          &kp SLASH                   &kp QUESTION
                                                     &kp TAB                         &to 0                         &kp ESC             &kp RC(A)          &tog 2                          &kp RETURN
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp NUMBER_1             &kp NUMBER_2         &kp NUMBER_3        &kp NUMBER_4              &kp N5       &kp NUMBER_6  &kp N7                 &kp N8             &kp N9                &kp N0
  &hml LEFT_CONTROL SLASH  &hml LEFT_GUI MINUS  &hml LEFT_ALT PLUS  &hml LEFT_SHIFT ASTERISK  &kp EQUAL    &kt LEFT      &hmr RIGHT_SHIFT DOWN  &hmr RIGHT_ALT UP  &hmr RIGHT_GUI RIGHT  &hmr RIGHT_CONTROL BACKSPACE
  &none                    &none                &none               &none                     &none        &trans        &trans                 &kp COMMA          &kp PERIOD            &trans
                                                &kp TAB             &to 0                     &kp ESC      &kp SPACE     &tog 3                 &kp ENTER
            >;
        };

        layer_3 {
            bindings = <
  &kp F1        &kp F2          &kp F3                &kp F4              &kp F5                  &kp F6       &kp F7             &kp F8           &kp F9      &kp F10
  &kp C_REWIND  &kp C_PREVIOUS  &kp C_NEXT            &kp C_FAST_FORWARD  &kp C_PLAY_PAUSE        &kp F13      &kp F14            &kp F15          &kp F16     &trans
  &trans        &trans          &trans                &trans              &trans                  &kp LS(F13)  &kp LS(F1)         &kp RC(F13)      &kp RC(F1)  &trans
                                &kp C_BRIGHTNESS_DEC  &to 0               &kp C_BRIGHTNESS_INC    &kp K_MUTE   &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
            >;
        };
    };
};
